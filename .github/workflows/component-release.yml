name: "Component: Release"

on:
  workflow_call:
    inputs:
      java_version:
        required: false
        default: "17"
        type: string
    secrets:
      ARTIFACTORY_PASSWORD:
        required: true
      ARTIFACTORY_USERNAME:
        required: true
      PRODUCTION_DEPLOYMENTS_SLACK_CHANNEL_ID:
        required: true
      SLACK_BOT_SIGNING_SECRET_OMG_BACKEND:
        required: true
      SLACK_BOT_TOKEN_OMG_BACKEND:
        required: true
      SONAR_TOKEN:
        required: true
      SONAR_URL:
        required: true

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  component-release:
    runs-on: ubuntu-20.04

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Read sonar.project.key from workflow.properties"
        id: sonar_project_key
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: ".github/workflows/workflow.properties"
          property: "sonar.project.key"

      - name: "Set up JDK"
        uses: actions/setup-java@v2
        with:
          java-version: "${{ inputs.java_version }}"
          distribution: "temurin"

      - name: "Generate changelog and create release"
        id: create-changelog-and-release
        uses: CleverShuttle/gh-composite-actions/actions/create-changelog-and-release@v1.24.0
        with:
          artifactory_username: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: "Copy Maven settings"
        uses: CleverShuttle/gh-composite-actions/actions/maven-settings@v1.24.0

      - name: "Restore Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: restore

      - name: "Build component with Maven"
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: mvn -B clean install

      - name: "Deploy to Artifactory"
        continue-on-error: true
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: mvn -B -DskipDockerBuild -DskipForbiddenApisCheck -Dmaven.main.skip -DskipTests -DskipIntegrationTests -DskipUnitTests -DskipDependencyCheck deploy

      - name: "Sonar: Run analysis for master"
        uses: CleverShuttle/gh-composite-actions/actions/sonar-java-analysis-master@v1.24.0
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          sonar_url: ${{ secrets.SONAR_URL }}
          sonar_project_key: ${{ steps.sonar_project_key.outputs.value }}

      - name: "Save Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: save


      # ---------------------- new composite action:

      - name: "Format changelog for slack"
        if: ${{ steps.create-changelog-and-release.outputs.changelog-skipped == 'false' }}
        id: changelog_format
        # https://github.com/LoveToKnow/slackify-markdown-action
        uses: lovetoknow/slackify-markdown-action@v1.0.0
        with:
          text: ${{ steps.create-changelog-and-release.outputs.changelog }}

      - name: "Generate changelog title"
        id: changelog_title
        if: ${{ steps.create-changelog-and-release.outputs.changelog-skipped == 'false' }}
        run: |
          output="*Changelog*"
          echo "::set-output name=text::$output"

      - name: "Env variable: REPO_BASE_URL"
        run: echo "REPO_BASE_URL=https://github.com/CleverShuttle/${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: "Notification: Success"
        if: ${{ success() && github.event.sender.login != 'renovate[bot]' }}
        uses: aibexhq/slack-rich-notify@v2.0.1
        with:
          token: ${{secrets.SLACK_BOT_TOKEN_OMG_BACKEND}}
          secret: ${{secrets.SLACK_BOT_SIGNING_SECRET_OMG_BACKEND}}
          channel: ${{secrets.PRODUCTION_DEPLOYMENTS_SLACK_CHANNEL_ID}}
          message: |
            <${{ env.REPO_BASE_URL }}|${{ github.event.repository.name }}> ${{ steps.create-changelog-and-release.outputs.version }} was successfully released – <${{ env.REPO_BASE_URL }}/actions/runs/${{ github.run_id }}|Details>

            ${{ steps.changelog_title.outputs.text }}

            ${{ steps.changelog_format.outputs.text }}

      - name: "Notification: Failure"
        if: ${{ failure() }}
        uses: aibexhq/slack-rich-notify@v2.0.1
        with:
          token: ${{secrets.SLACK_BOT_TOKEN_OMG_BACKEND}}
          secret: ${{secrets.SLACK_BOT_SIGNING_SECRET_OMG_BACKEND}}
          channel: ${{secrets.PRODUCTION_DEPLOYMENTS_SLACK_CHANNEL_ID}}
          message: |
            :x: <${{ env.REPO_BASE_URL }}|${{ github.event.repository.name }}> ${{ steps.create-changelog-and-release.outputs.version }} failed to release – <${{ env.REPO_BASE_URL }}/actions/runs/${{ github.run_id }}|Details>
