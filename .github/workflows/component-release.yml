name: "Component: Release"

on:
  workflow_call:
    inputs:
      java_version:
        required: false
        default: "17"
        type: string
      sonar_analysis_enabled:
        required: false
        default: true
        type: boolean
      sonar_project_key:
        required: false
        type: string
    secrets:
      ARTIFACTORY_PASSWORD:
        required: true
      ARTIFACTORY_USERNAME:
        required: true
      PRODUCTION_DEPLOYMENTS_SLACK_CHANNEL_ID:
        required: true
      SLACK_BOT_SIGNING_SECRET_OMG_BACKEND:
        required: true
      SLACK_BOT_TOKEN_OMG_BACKEND:
        required: true
      SONAR_TOKEN:
        required: true
      SONAR_URL:
        required: true

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  component-release:
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Env variable: REPO_BASE_URL"
        run: echo "REPO_BASE_URL=https://github.com/CleverShuttle/${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: "Env variable: MAVEN_GROUP_ID"
        if: ${{ inputs.sonar_analysis_enabled }}
        run: echo "MAVEN_GROUP_ID=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.groupId -q -DforceStdout 2>/dev/null)" >> $GITHUB_ENV

      - name: "Env variable: MAVEN_ARTIFACT_ID"
        if: ${{ inputs.sonar_analysis_enabled }}
        run: echo "MAVEN_ARTIFACT_ID=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -q -DforceStdout 2>/dev/null)" >> $GITHUB_ENV

      - name: "Set up JDK"
        uses: actions/setup-java@v2
        with:
          java-version: "${{ inputs.java_version }}"
          distribution: "temurin"

      - name: "Copy Maven settings"
        uses: CleverShuttle/gh-composite-actions/actions/maven-settings@v1.26.0

      - name: "Restore Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: restore

      - name: "Generate changelog and create release"
        id: create-changelog-and-release
        uses: CleverShuttle/gh-composite-actions/actions/create-changelog-and-release@v1.26.0
        with:
          artifactory_username: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: "Build component with Maven"
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: mvn -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean install

      - name: "Deploy to Artifactory"
        continue-on-error: true
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: mvn -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -DskipDockerBuild -DskipForbiddenApisCheck -Dmaven.main.skip -DskipTests -DskipIntegrationTests -DskipUnitTests -DskipDependencyCheck deploy

      - name: "Get Sonar project key"
        id: sonar-project-key
        if: ${{ inputs.sonar_analysis_enabled }}
        env:
          MAVEN_GROUP_ID: ${{ env.MAVEN_GROUP_ID }}
          MAVEN_ARTIFACT_ID: ${{ env.MAVEN_ARTIFACT_ID }}
          SONAR_PROJECTKEY: ${{ inputs.sonar_project_key }}
        shell: bash
        run: |
          if [ -z "${{ env.SONAR_PROJECTKEY }}" ]; then
            output="${{ env.MAVEN_GROUP_ID }}:${{ env.MAVEN_ARTIFACT_ID }}"
            echo "Use calculated sonar key '$output'"
            echo "::set-output name=value::$output"
          else
            output="${{ env.SONAR_PROJECTKEY }}"
            echo "Use given sonar key '$output'"
            echo "::set-output name=value::$output"
          fi

      - name: "Run Sonar analysis for master"
        if: ${{ inputs.sonar_analysis_enabled }}
        uses: CleverShuttle/gh-composite-actions/actions/sonar-java-analysis-master@v1.26.0
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          sonar_url: ${{ secrets.SONAR_URL }}
          sonar_project_key: ${{ steps.sonar-project-key.outputs.value }}

      - name: "Save Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: save

      # ---------------------- TODO new composite action:

      - name: "Format changelog for slack"
        if: ${{ steps.create-changelog-and-release.outputs.changelog-skipped == 'false' }}
        id: changelog_format
        # https://github.com/LoveToKnow/slackify-markdown-action
        uses: lovetoknow/slackify-markdown-action@v1.0.0
        with:
          text: ${{ steps.create-changelog-and-release.outputs.changelog }}

      - name: "Generate changelog title"
        id: changelog_title
        if: ${{ steps.create-changelog-and-release.outputs.changelog-skipped == 'false' }}
        run: |
          output="*Changelog*"
          echo "::set-output name=text::$output"

      - name: "Notification: Success"
        if: ${{ success() && github.event.sender.login != 'renovate[bot]' }}
        uses: aibexhq/slack-rich-notify@v2.0.1
        with:
          token: ${{secrets.SLACK_BOT_TOKEN_OMG_BACKEND}}
          secret: ${{secrets.SLACK_BOT_SIGNING_SECRET_OMG_BACKEND}}
          channel: ${{secrets.PRODUCTION_DEPLOYMENTS_SLACK_CHANNEL_ID}}
          message: |
            <${{ env.REPO_BASE_URL }}|${{ github.event.repository.name }}> ${{ steps.create-changelog-and-release.outputs.version }} was successfully released – <${{ env.REPO_BASE_URL }}/actions/runs/${{ github.run_id }}|Details>

            ${{ steps.changelog_title.outputs.text }}

            ${{ steps.changelog_format.outputs.text }}

      - name: "Notification: Failure"
        if: ${{ failure() }}
        uses: aibexhq/slack-rich-notify@v2.0.1
        with:
          token: ${{secrets.SLACK_BOT_TOKEN_OMG_BACKEND}}
          secret: ${{secrets.SLACK_BOT_SIGNING_SECRET_OMG_BACKEND}}
          channel: ${{secrets.PRODUCTION_DEPLOYMENTS_SLACK_CHANNEL_ID}}
          message: |
            :x: <${{ env.REPO_BASE_URL }}|${{ github.event.repository.name }}> ${{ steps.create-changelog-and-release.outputs.version }} failed to release – <${{ env.REPO_BASE_URL }}/actions/runs/${{ github.run_id }}|Details>
