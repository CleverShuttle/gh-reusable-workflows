name: "Component: Release"

on:
  workflow_call:
    inputs:
      java_version:
        required: false
        default: "17"
        type: string
    secrets:
      ARTIFACTORY_PASSWORD:
        required: true
      ARTIFACTORY_USERNAME:
        required: true
      SLACK_BOT_SIGNING_SECRET_OMG_BACKEND:
        required: true
      SLACK_BOT_TOKEN_OMG_BACKEND:
        required: true
      SONAR_TOKEN:
        required: true
      SONAR_URL:
        required: true

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  component-release:
    runs-on: ubuntu-20.04

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Read sonar.project.key from workflow.properties"
        id: sonar_project_key
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: ".github/workflows/workflow.properties"
          property: "sonar.project.key"

      - name: "Set up JDK"
        uses: actions/setup-java@v2
        with:
          java-version: "${{ inputs.java_version }}"
          distribution: "temurin"

      - name: "Install xmlstarlet"
        run: sudo apt-get install xmlstarlet

      - name: "Setup github config"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Github Action"

      - name: "Env variable: REPO_BASE_URL"
        run: echo "REPO_BASE_URL=https://github.com/CleverShuttle/${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: "Generate changelog"
        id: changelog
        uses: CleverShuttle/gh-composite-actions/actions/conventional-changelog@v1.21.2

      - name: "Generate Jira links for the changelog"
        id: changelog_with_jira_links
        env:
          CHANGELOG: ${{ steps.changelog.outputs.clean_changelog }}
        run: |
          if [ -z "${{ env.CHANGELOG }}" ]; then
            output=""
            echo "::set-output name=text::$output"
          else
            output=$(node .github/workflows/generate-jira-links.js)
            output="${output//'%'/'%25'}"
            output="${output//$'\n'/'%0A'}"
            output="${output//$'\r'/'%0D'}"
            echo "::set-output name=text::$output"
          fi

      - name: "Delete created tag from changelog"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          git push --delete origin v${{ steps.changelog.outputs.version }}
          git tag -d v${{ steps.changelog.outputs.version }}

      - name: "Bump version and push tag"
        # Reads the current version from pom.xml and sets the new version in all pom.xml files (including those in subdirectories)
        # Notes:
        # - {,**/}pom.xml expands to both pom.xml and **/pom.xml
        # - **/pom.xml expands to pom.xml files in subdirectories and will remain the same when no such files exist
        # - ${POM_FILES#**/pom.xml#} replaces the first occurrence of **/pom.xml by an empty string, if it exists
        # - ${POM_FILES%%*( )} removes trailing whitespace
        # - ${POM_FILES// /,} replaces all space characters by commas
        run: |
          if [[ "$(echo **/pom.xml)" == "**/pom.xml" ]]; then
            npx dwmkerr/standard-version --packageFiles pom.xml --bumpFiles pom.xml
          else
            export POM_FILES="$(echo {,**/}pom.xml)" \
            && export POM_FILES="${POM_FILES%%*( )}" \
            && export BUMP_FILES="${POM_FILES// / --bumpFiles }" \
            && npx dwmkerr/standard-version --packageFiles pom.xml --bumpFiles $BUMP_FILES
          fi

      - name: "Env variable: PROJECT_VERSION"
        run: echo "PROJECT_VERSION=$(xmlstarlet sel -N my=http://maven.apache.org/POM/4.0.0 -t -m my:project -v my:version pom.xml)" >> $GITHUB_ENV

      - name: "Push changes"
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: "Create Github Release"
        uses: softprops/action-gh-release@fe9a9bd3295828558c7a3c004f23f3bf77d155b2
        with:
          body: ${{ steps.changelog_with_jira_links.outputs.text }}
          tag_name: v${{ env.PROJECT_VERSION }}
          name: v${{ env.PROJECT_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Restore Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: restore

      - name: "Copy settings.xml"
        uses: CleverShuttle/gh-composite-actions/actions/maven-settings@v1.21.1

      - name: "Build component with Maven"
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: mvn -B clean install

      - name: "Deploy to Artifactory"
        continue-on-error: true
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: mvn -B -DskipDockerBuild -DskipForbiddenApisCheck -Dmaven.main.skip -DskipTests -DskipIntegrationTests -DskipUnitTests -DskipDependencyCheck deploy

      - name: "Sonar: Run analysis for master"
        uses: CleverShuttle/gh-composite-actions/actions/sonar-java-analysis-master@v1.21.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          sonar_url: ${{ secrets.SONAR_URL }}
          sonar_project_key: ${{ steps.sonar_project_key.outputs.value }}

      - name: "Save Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: save

      - name: "Format changelog for slack"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        id: changelog_format
        uses: lovetoknow/slackify-markdown-action@v1.0.0
        with:
          text: ${{ steps.changelog_with_jira_links.outputs.text }}

      - name: "Generate changelog title"
        id: changelog_title
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          output="*Changelog*"
          echo "::set-output name=text::$output"

      - name: "Notification: Success"
        if: ${{ success() && github.event.sender.login != 'renovate[bot]' }}
        uses: aibexhq/slack-rich-notify@v2.0.1
        with:
          token: ${{secrets.SLACK_BOT_TOKEN_OMG_BACKEND}}
          secret: ${{secrets.SLACK_BOT_SIGNING_SECRET_OMG_BACKEND}}
          channel: ${{secrets.PRODUCTION_DEPLOYMENTS_SLACK_CHANNEL_ID}}
          message: |
            <${{ env.REPO_BASE_URL }}|${{ github.event.repository.name }}> ( version `${{ env.PROJECT_VERSION }}` ) was successfully released – <${{ env.REPO_BASE_URL }}/actions/runs/${{ github.run_id }}|Details>

            ${{ steps.changelog_title.outputs.text }}

            ${{ steps.changelog_format.outputs.text }}

      - name: "Notification: Failure"
        if: ${{ failure() }}
        uses: aibexhq/slack-rich-notify@v2.0.1
        with:
          token: ${{secrets.SLACK_BOT_TOKEN_OMG_BACKEND}}
          secret: ${{secrets.SLACK_BOT_SIGNING_SECRET_OMG_BACKEND}}
          channel: ${{secrets.PRODUCTION_DEPLOYMENTS_SLACK_CHANNEL_ID}}
          message: |
            :x: <${{ env.REPO_BASE_URL }}|${{ github.event.repository.name }}> ( version `${{ env.PROJECT_VERSION }}` ) failed to release – <${{ env.REPO_BASE_URL }}/actions/runs/${{ github.run_id }}|Details>
