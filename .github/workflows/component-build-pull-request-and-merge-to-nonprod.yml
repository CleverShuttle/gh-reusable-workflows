name: 'Build pull request and merge to nonProd'

on:
  pull_request:

jobs:
  build-pull-request:
    runs-on: ubuntu-20.04

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2

      - name: "Read java.version from workflow.properties"
        id: java_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: '.github/workflows/workflow.properties'
          property: 'java.version'

      - name: "Set up JDK"
        uses: actions/setup-java@v2
        with:
          java-version: "${{ steps.java_version.outputs.value }}"
          distribution: "temurin"

      - name: "Install xmlstarlet"
        run: sudo apt-get install xmlstarlet

      - name: "Read sonar.project.key from workflow.properties"
        id: sonar_project_key
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: '.github/workflows/workflow.properties'
          property: 'sonar.project.key'

      - name: "Env variable: PROJECT_VERSION"
        run: echo "PROJECT_VERSION=$(xmlstarlet sel -N my=http://maven.apache.org/POM/4.0.0 -t -m my:project -v my:version pom.xml)" >> $GITHUB_ENV

      - name: "Restore Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: restore

      - name: "Copy settings.xml"
        uses: CleverShuttle/gh-composite-actions/actions/maven-settings@v1.6.3

      - name: "Build with Maven"
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: mvn clean install

      - name: "Sonar: run analysis for pull requests"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.projectKey=${{ steps.sonar_project_key.outputs.value }}
          -Dsonar.scm.provider=git
          -Dsonar.sourceEncoding=UTF-8
          -Dsonar.language=java
          -Dsonar.qualitygate.wait=true
          -Dsonar.qualitygate.timeout=300
          -Dsonar.dependencyCheck.reportPath=target/dependency-check-report.xml
          -Dsonar.dependencyCheck.htmlReportPath=target/site/dependency-check-report.html
          -Dsonar.pullrequest.provider=GitHub
          -Dsonar.pullrequest.key=${{ github.event.number }}
          -Dsonar.pullrequest.branch=${{ github.HEAD_REF }}
          -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}
          -Dsonar.pullrequest.github.repository=${{ github.repository }}

      - name: "Save Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: save

  automerge-to-nonprod:
    runs-on: ubuntu-20.04
    needs: build-pull-request

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2
        with:
          ref: master
          # The default of 1 only fetches the default branch. We also want nonProd, so we fetch all.
          fetch-depth: 0
          token: ${{ secrets.OMG_GITHUB_ACCESS_TOKEN }}

      - name: "Setup git config"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Github Action"

      - name: "Prepare nonProd"
        run: |
          set -o errexit -o nounset
          if git switch nonprod 2>/dev/null; then
            branchName="${{ github.head_ref }}"
            # https://stackoverflow.com/a/29613573/5390250
            escapedBranchName=$(sed "s/[^^]/[&]/g; s/\^/\\^/g" <<< "$branchName")
            echo "nonprod branch exists. Dropping old feature commit '$branchName' if it exists"
            GIT_SEQUENCE_EDITOR="sed -i -e \"s/pick\(.*$escapedBranchName\)$/drop\1/g\"" git rebase -i master
          else
            echo "nonprod branch does not exist. Creating it from master."
            git checkout -b nonprod origin/master
          fi

      - name: "Merge feature to nonProd"
        run: |
          set -o nounset -o errexit
          git merge --squash "origin/${{ github.head_ref }}"
          git commit -m "${{ github.head_ref }}"

      - name: "Push changes"
        run: |
          git push --force origin nonprod
