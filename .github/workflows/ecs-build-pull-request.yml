name: "ECS: Build pull request"

on:
  workflow_call:
    inputs:
      java_version:
        required: false
        default: "17"
        type: string
    outputs:
      slack_message_timestamp:
        description: "Slack message timestamp"
        value: ${{ jobs.ecs-build-pull-request.outputs.slack_message_timestamp }}
    secrets:
      ARTIFACTORY_PASSWORD:
        required: true
      ARTIFACTORY_USERNAME:
        required: true
      AWS_REGION:
        required: true
      ECR_REGISTRY:
        required: true
      NONPROD_AWS_SECRET_ACCESS_KEY:
        required: true
      NONPROD_AWS_ACCESS_KEY_ID:
        required: true
      PRODUCTION_AWS_ACCESS_KEY_ID:
        required: true
      PRODUCTION_AWS_SECRET_ACCESS_KEY:
        required: true
      SLACK_TOKEN:
        required: true
      SLACK_CHANNEL_ID:
        required: true
      SONAR_TOKEN:
        required: true
      SONAR_URL:
        required: true

jobs:
  ecs-build-pull-request:
    runs-on: ubuntu-20.04
    outputs:
      slack_message_timestamp: ${{ steps.slack-progress.outputs.slack_message_ts }}
    env:
      MAVEN_ARGS: "--batch-mode --no-transfer-progress"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Set up JDK"
        uses: actions/setup-java@v3
        with:
          java-version: "${{ inputs.java_version }}"
          distribution: "temurin"

      - name: "Restore Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: restore

      - name: "Copy Maven settings.xml"
        uses: CleverShuttle/gh-composite-actions/actions/maven-settings@v1

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.NONPROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.NONPROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Login to ECR"
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REGISTRY }}
          username: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}

      - name: "Env variable: MAVEN_GROUP_ID"
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: echo "MAVEN_GROUP_ID=$(mvn $MAVEN_ARGS org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.groupId -q -DforceStdout 2>/dev/null)" >> $GITHUB_ENV

      - name: "Env variable: MAVEN_ARTIFACT_ID"
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: echo "MAVEN_ARTIFACT_ID=$(mvn $MAVEN_ARGS org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -q -DforceStdout 2>/dev/null)" >> $GITHUB_ENV

      - name: "Slack: In progress"
        if: ${{ success() && !(github.event.sender.login == 'renovate[bot]' || startsWith(github.event.head_commit.message, 'renovate/')) }}
        id: slack-progress
        uses: CleverShuttle/gh-composite-actions/actions/slack-status@v1
        with:
          slack_token: ${{secrets.SLACK_TOKEN}}
          slack_channel_id: ${{secrets.SLACK_CHANNEL_ID}}
          job: PULL_REQUEST
          status: IN_PROGRESS
          type: SERVICE

      - name: "Build service with Maven"
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: mvn $MAVEN_ARGS clean install

      - name: "Run Sonar analysis for pull requests"
        uses: CleverShuttle/gh-composite-actions/actions/sonar-java-analysis-pull-request@v1
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USERNAME }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          sonar_url: ${{ secrets.SONAR_URL }}
          sonar_project_key: "${{ env.MAVEN_GROUP_ID }}:${{ env.MAVEN_ARTIFACT_ID }}"

      - name: "Save Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: save

      - name: "Report test results as GitHub pull request check"
        if: ${{ always() && !(github.event.sender.login == 'renovate[bot]' || startsWith(github.event.head_commit.message, 'renovate/')) }}
        # https://github.com/mikepenz/action-junit-report
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'
          fail_on_failure: true
          require_tests: false
          summary: "JUnit Test Report"

      - name: "Slack: Failure"
        if: ${{ failure() && !(github.event.sender.login == 'renovate[bot]' || startsWith(github.event.head_commit.message, 'renovate/')) }}
        uses: CleverShuttle/gh-composite-actions/actions/slack-status@v1
        with:
          slack_token: ${{secrets.SLACK_TOKEN}}
          slack_channel_id: ${{secrets.SLACK_CHANNEL_ID}}
          job: PULL_REQUEST
          status: FAILURE
          type: SERVICE
