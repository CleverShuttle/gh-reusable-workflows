name: 'Workflows: Release'

on:
  push:
    branches:
      - master

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency: ${{ github.workflow }}

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - name: 'Checkout'
        # https://github.com/actions/checkout
        uses: actions/checkout@v3

      - name: 'Clone gh-composite-actions repository'
        # https://github.com/actions/checkout#checkout-multiple-repos-side-by-side
        uses: actions/checkout@v3
        with:
          repository: CleverShuttle/gh-composite-actions
          path: tmp

      - name: 'Install package required in changelog.config.js'
        shell: bash
        run: npm i conventional-changelog-conventionalcommits

      - name: 'Generate changelog'
        id: conventional-changelog
        # https://github.com/TriPSs/conventional-changelog-action
        uses: TriPSs/conventional-changelog-action@v3.14.0
        with:
          preset: conventionalcommits
          github-token: ${{ github.token }}
          git-push: false
          skip-version-file: true
          skip-commit: true
          release-count: 50
          config-file-path: 'tmp/actions/create-changelog-and-release/changelog.config.js'

      - name: 'Semantic versioning'
        id: semantic-versioning
        # https://github.com/ietf-tools/semver-action
        uses: ietf-tools/semver-action@v1.1.1
        with:
          token: ${{ github.token }}
          branch: ${{ github.ref }}
          minorList: feat, feature
          # https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional#type-enum
          patchList: fix, bugfix, perf, refactor, test, tests, chore, build, ci, doc, docs, revert, style, deps, improvements, enhancement, other

      - name: 'Calculate version, tag and major tag'
        id: versioning
        shell: bash
        env:
          SEMANTIC_VERSIONING_VERSION: ${{ env.nextStrict }}
        run: |
          version="$SEMANTIC_VERSIONING_VERSION"
          echo "::set-output name=version::$version"
          echo "::set-output name=tag::v$version"
          parts=(${version//./ })
          echo "::set-output name=major::v${parts[0]}"

      - name: "Commit changes and set git tags"
        shell: bash
        env:
          NEW_VERSION: ${{ steps.versioning.outputs.version }}
          NEW_TAG: ${{ steps.versioning.outputs.tag }}
          MAJOR: ${{ steps.versioning.outputs.major }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Github Action"
          git add .
          git commit -m "chore(release): $NEW_VERSION" -a
          
          if [ $(git tag -l "$NEW_TAG") ]; then
            echo "Delete tag from 'conventional-changelog-action'"
            git tag -d $NEW_TAG
          fi
          
          if [ $(git tag -l "$MAJOR") ]; then
            echo "Delete major tag '$MAJOR'"
            git tag -d "$MAJOR"
          fi

          # major version tag (such as v1, v2) to point to the Git ref of the current release
          git tag -a "$MAJOR" -m "$MAJOR"
          git tag -a "$NEW_TAG" -m "$NEW_TAG"

      - name: 'Push changes'
        # https://github.com/ad-m/github-push-action
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.ref }}
          tags: true
          force: true

      - name: 'Create Github release'
        # https://github.com/softprops/action-gh-release
        uses: softprops/action-gh-release@v0.1.14
        env:
          github_token: ${{ github.token }}
        with:
          body: ${{ steps.conventional-changelog.outputs.clean_changelog }}
          tag_name: ${{ steps.versioning.outputs.tag }}
          name: ${{ steps.versioning.outputs.tag }}
