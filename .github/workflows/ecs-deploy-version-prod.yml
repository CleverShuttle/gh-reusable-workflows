name: "ECS: Deploy version to PROD"

on:
  workflow_call:
    secrets:
      AWS_REGION:
        required: true
      ECR_REGISTRY:
        required: true
      PRODUCTION_AWS_ACCESS_KEY_ID:
        required: true
      PRODUCTION_AWS_SECRET_ACCESS_KEY:
        required: true
      SLACK_CHANNEL_ID:
        required: true
      SLACK_TOKEN:
        required: true

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency: ${{ github.workflow }}

jobs:
  ecs-deploy-version-prod:
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Read ecr.image.name from workflow.properties"
        id: ecr_image_name
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: ".github/workflows/workflow.properties"
          property: "ecr.image.name"

      - name: "Read ecs.cluster.name.cs.production from workflow.properties"
        id: ecs_cluster_name_cs_production
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: ".github/workflows/workflow.properties"
          property: "ecs.cluster.name.cs.production"

      - name: "Read ecs.service.name.production from workflow.properties"
        id: ecs_service_name_production
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: ".github/workflows/workflow.properties"
          property: "ecs.service.name.production"

      - name: "Env variable: IMAGE_TAG"
        run: echo "IMAGE_TAG=${{ secrets.ECR_REGISTRY }}/${{ steps.ecr_image_name.outputs.value }}:${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Slack: In progress"
        id: slack-progress
        uses: CleverShuttle/gh-composite-actions/actions/slack-status@v1.34.3
        with:
          slack_token: ${{secrets.SLACK_TOKEN}}
          slack_channel_id: ${{secrets.SLACK_CHANNEL_ID}}
          job: RELEASE
          status: IN_PROGRESS
          type: SERVICE

      - name: "Deploy ECS"
        # https://github.com/brunocascio/ecs-deploy
        uses: brunocascio/ecs-deploy@v2.0.0
        with:
          args: deploy ${{ steps.ecs_cluster_name_cs_production.outputs.value }} ${{ steps.ecs_service_name_production.outputs.value }} --image ${{ steps.ecr_image_name.outputs.value }} ${{ env.IMAGE_TAG }} --region ${{ secrets.AWS_REGION }} --timeout 600 --rollback

      - name: "Slack: Success"
        if: ${{ success() && !(github.event.sender.login == 'renovate[bot]' || startsWith(github.event.head_commit.message, 'renovate/')) }}
        uses: CleverShuttle/gh-composite-actions/actions/slack-status@v1.34.3
        with:
          slack_token: ${{secrets.SLACK_TOKEN}}
          slack_channel_id: ${{secrets.SLACK_CHANNEL_ID}}
          slack_message_ts: ${{ steps.slack-progress.outputs.slack_message_ts }}
          slack_reaction: white_check_mark
          job: DEPLOY_VERSION
          status: SUCCESS
          type: SERVICE
          version: ${{ github.event.inputs.version }}

      - name: "Slack: Failure"
        if: ${{ failure() }}
        uses: CleverShuttle/gh-composite-actions/actions/slack-status@v1.34.3
        with:
          slack_token: ${{secrets.SLACK_TOKEN}}
          slack_channel_id: ${{secrets.SLACK_CHANNEL_ID}}
          job: DEPLOY_VERSION
          status: FAILURE
          type: SERVICE
          version: ${{ github.event.inputs.version }}
