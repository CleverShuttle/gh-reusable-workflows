name: "Check branches created by Renovate"

on:
  workflow_call:
    inputs:
      java_version:
        required: true
        default: "17"
        type: string
    secrets:
      ARTIFACTORY_PASSWORD: true
        required: true
      ARTIFACTORY_USERNAME:
        required: true
      AWS_REGION:
        required: true
      ECR_REGISTRY:
        required: true
      NONPROD_AWS_SECRET_ACCESS_KEY:
        required: true
      NONPROD_AWS_ACCESS_KEY_ID:
        required: true
      PRODUCTION_AWS_ACCESS_KEY_ID:
        required: true
      PRODUCTION_AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  build-pull-request:
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2

      - name: "Set up JDK"
        uses: actions/setup-java@v2
        with:
          java-version: ${{ inputs.java_version }}
          distribution: "temurin"

      - name: "Install xmlstarlet"
        run: sudo apt-get install xmlstarlet

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.NONPROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.NONPROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Login to ECR"
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REGISTRY }}
          username: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}

      - name: "Env variable: PROJECT_VERSION"
        run: echo "PROJECT_VERSION=$(xmlstarlet sel -N my=http://maven.apache.org/POM/4.0.0 -t -m my:project -v my:version pom.xml)" >> $GITHUB_ENV

      - name: "Restore Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: restore

      - name: "Copy settings.xml"
        run: |
          mkdir -p ~/.m2
          cp .github/workflows/github-settings.xml ~/.m2/settings.xml

      - name: "Build ECS with Maven"
        env:
          USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: mvn clean install

      - name: "Save Maven cache"
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: save
